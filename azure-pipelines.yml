trigger:
  branches:
    include:
      - main

stages:
- stage: winStage
  pool:
    vmImage: 'windows-latest'
  dependsOn: []
  displayName: Windows
  jobs:

  - job: windowsJob
    displayName: Windows
    steps:

    # 安装 Flutter SDK
    - task: FlutterInstall@0
      displayName: "Install Flutter SDK"
      inputs:
        mode: 'auto'
        channel: 'stable'
        version: 'latest'

    # 安装 Python 和 Flet 依赖
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.10'
        addToPath: true

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install Flet and dependencies'

    # 运行 Flutter Doctor 以确保 Flutter 环境正确配置
    - task: FlutterCommand@0
      displayName: "Run Flutter diagnostics"
      inputs:
        projectDirectory: '.'
        arguments: 'doctor -v'

    # 使用 Flet 进行打包，生成 Windows 应用程序
    - task: CmdLine@2
      inputs:
        script: |
          flet build windows --no-rich-output
      displayName: 'Build Flet Application for Windows'

    # 复制生成的 .exe 文件到发布目录
    - task: CopyFiles@2
      displayName: "Copy app to staging directory"
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)/build/windows'
        contents: '**'
        targetFolder: '$(Build.ArtifactStagingDirectory)'
        flattenFolders: false  # 保留文件夹结构

    # 发布 .exe 文件作为构建产物
    - task: PublishBuildArtifacts@1
      displayName: "Publish EXE file"
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'Windows_EXE'
        publishLocation: 'Container'
